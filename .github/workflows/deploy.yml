# Unique name for this workflow
name: Docker CL/CD Pipeline Prod

# Definition when the workflow should run
on:
  push:
    branches: [main]

# Jobs to be executed
jobs:
  copy_to_server:
    name: upload artifacts
    runs-on: ubuntu-latest
    environment: Prod
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - uses: actions/upload-artifact@v4
      with:
        name: ft_userdata
        path: ft_userdata/

    - uses: actions/upload-artifact@v4
      with:
        name: nginx
        path: nginx/

    - uses: actions/download-artifact@v4
      with:
        name: ft_userdata
        path: ft_userdata

    - uses: actions/download-artifact@v4
      with:
        name: nginx
        path: nginx

    - name: copy artifacts to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: ft_userdata/*,nginx/*
        target: /home/botcogno/freqtrade
        rm: true
    
    - name: copy file via ssh key
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.KEY }}
        source: "docker-compose-prod.yml"
        target: /home/botcogno
    
  #deploy-to-botcognos:
  #  needs: changes
  #  runs-on: ubuntu-latest
  #  environment: Prod

  #  steps:
  #    - name: server actions
  #      uses: appleboy/ssh-action@master
  #      with:
  #        host: ${{ secrets.HOST }}
  #        username: ${{ secrets.USERNAME }}
  #        key: ${{ secrets.KEY }}
  #        port: 22
  #        script: |
  #          cd /home/botcogno/freqtrade/distfiles
  #          echo "Docker compose down"
  #          sudo docker compose -f docker-compose-prod.yml down
  #          echo "Docker compose up"
  #          sudo docker compose -f docker-compose-prod.yml up --wait
  #          sudo docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
