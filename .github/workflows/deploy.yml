# Unique name for this workflow
name: Docker CL/CD Pipeline Prod

# Definition when the workflow should run
on:
  push:
    branches: [main]

# Jobs to be executed
jobs:
  changes:
    name: test changed-files
    runs-on: ubuntu-latest
    environment: Prod
    steps:
    - name: checkout
      uses: actions/checkout@v4

    - uses: actions/upload-artifact@v4
      with:
        name: my-artifact
        path: .


    - uses: actions/download-artifact@v4
      with:
        name: my-artifact
        path: distfiles

    - name: copy file to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        source: distfiles/*
        target: /home/botcogno/freqtrade
        rm: true
  
  deploy-to-botcognos:
    needs: changes
    runs-on: ubuntu-latest
    environment: Prod

    steps:
      - name: server actions
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            echo "Update nginx-prod.conf"
            cd /home/botcogno/freqtrade/nginx
            cp nginx-prod.conf /etc/nginx/conf.d
            echo "Docker compose down"
            docker compose -f docker-compose-prod.yml down
            echo "Docker compose up"
            docker compose -f docker-compose-prod.yml up --wait
            docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
